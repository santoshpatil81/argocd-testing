apiVersion: batch/v1
kind: Job
metadata:
  generateName: presync-backup-
  namespace: argocd
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      containers:
        - name: conftest
          image: alpine:latest
          command: ["/bin/sh"]
          args:
          - -c
          - >
            LATEST_VERSION=$(wget -O - "https://api.github.com/repos/open-policy-agent/conftest/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | cut -c 2-)
            wget "https://github.com/open-policy-agent/conftest/releases/download/v${LATEST_VERSION}/conftest_${LATEST_VERSION}_Linux_x86_64.tar.gz"
            tar xzf conftest_${LATEST_VERSION}_Linux_x86_64.tar.gz
            conftest test /conftest/examples/kubernetes/deployment.yaml -p /conftest/examples/kubernetes/policy -o json
          volumeMounts:
            - name: conftest_code
              mountPath: /conftest
              readOnly: false
        restartPolicy: Never
  backoffLimit: 1
---
apiVersion: batch/v1
kind: Job
metadata:
  generateName: presync-backup-1-
  namespace: argocd
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      volumes:
        - name: astra-control-config
          secret:
            secretName: astra-control-config
      containers:
      - name: alpine-actoolkit
        image: alpine:latest
        env:
          - name: APPNAME
            value: "ghost-argocd"
          - name: CLUSTERNAME
            value: "aks-eastus-cluster"
          - name: ACTOOLKIT_VERSION
            value: "2.6.2"
        command: ["/bin/sh"]
        args:
        - -c
        - >
          apk add py3-pip jq &&
          python3 -m pip install --upgrade pip &&
          python3 -m pip install actoolkit==$ACTOOLKIT_VERSION &&
          for i in `actoolkit -o json list apps -f $APPNAME -c $CLUSTERNAME | jq -r '.items[].id'`;
          do
            echo actoolkit: backing up app $APPNAME / $i;
            actoolkit create backup $i argo-presync-`date "+%Y%m%d%H%M%S"`;
          done
        volumeMounts:
          - mountPath: /etc/astra-toolkits
            name: astra-control-config
            readOnly: true
      restartPolicy: Never
  backoffLimit: 1
